from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from faker import Faker

from users.models import UserProfile
from random import sample, randint, choice

fake = Faker('uk_UA')

about_list = [
    "Олександра - відома організаторка подій з Одеси. Вона спеціалізується на організації мистецьких виставок, театральних вистав та культурних заходів у місті. Олександра має великий досвід у цій галузі та завжди створює незабутні враження для учасників і гостей її подій.",
    "Віктор - організатор подій з Дніпра. Він відомий своїм професіоналізмом та відповідальністю у роботі. Віктор успішно проводить різноманітні культурні та розважальні заходи для місцевого населення та гостей міста.",
    "Анна - енергійна організаторка подій з Запоріжжя. Вона спеціалізується на організації фестивалів, ярмарків та культурних заходів відкритого повітря. Анна має вражаючі організаторські здібності та завжди створює атмосферу радості та задоволення на своїх подіях.",
    "Андрій - творчий організатор подій з Луцька. Він відомий своїм нетрадиційним підходом до організації заходів та здатністю здивувати гостей нестандартними рішеннями.",
    "Олег - досвідчений організатор подій з Рівного. Він має великий досвід у роботі з корпоративними клієнтами та успішно організовує бізнес-заходи та презентації.",
    "Юлія - талановита організаторка подій з Івано-Франківська. Вона спеціалізується на організації культурних та освітніх заходів для молоді та студентів.",
    "Максим - ентузіастічний організатор подій з Тернополя. Він володіє широким спектром ідей та завжди створює яскраві та запам'ятовуючі події для місцевих жителів.",
    "Олексій - креативний організатор подій з Чернівців. Він відомий своїм нестандартним підходом до організації заходів та здатністю створювати атмосферу магії на своїх подіях.",
    "Ірина - професійна організаторка подій з Хмельницького. Вона володіє великим досвідом у роботі з клієнтами та завжди забезпечує високий рівень сервісу на своїх заходах.",
    "Сергій - творчий організатор подій з Житомира. Він відомий своєю вмінням створювати неповторні та вражаючі заходи для своїх клієнтів.",
    "Петро - відомий організатор подій з Харкова. Він має багаторічний досвід у цій сфері та є одним з провідних фахівців у місті. Петро відповідальний за проведення різноманітних подій, включаючи концерти, фестивалі, спортивні змагання та бізнес-заходи. Він відомий своєю організаційною здатністю та здатністю швидко реагувати на будь-які непередбачені ситуації, що забезпечує успішне проведення кожної події.",
    "Марія - молода та талановита організаторка подій з Львова. Вона є одним із найбільш активних учасників культурного життя міста та вже здобула визнання за свою роботу. Марія спеціалізується на організації фестивалів, театральних вистав, а також великих спортивних заходів. Вона володіє творчим підходом до кожного проекту та завжди здатна знайти нестандартні рішення для виконання поставлених завдань.",
    "Іван - досвідчений організатор подій з Києва. Він працює у цій галузі протягом останніх 10 років і вже успішно провів безліч заходів у місті. Його портфоліо включає організацію концертів, фестивалів, стендап-вистав, спортивних змагань та інших культурних та розважальних заходів. Іван має вражаючі навички у координації команди, веденні переговорів з партнерами та забезпеченні успішного виконання кожної події."
]


class Command(BaseCommand):
    help = 'Seed random user profiles'

    def handle(self, *args, **kwargs):
        try:
            users = list(get_user_model().objects.all())
            for user in users:
                try:
                    UserProfile.objects.get(user=user)
                    self.stdout.write(self.style.WARNING(f"Профіль користувача {user} вже існує. Пропускаю."))
                    continue
                except UserProfile.DoesNotExist:
                    pass

                if user.is_staff or user.is_content_maker:
                    profile = UserProfile(
                        user=user,
                        about=choice(about_list),
                    )
                else:
                    profile = UserProfile(user=user)
                profile.full_clean()
                profile.save()

                followers = [follower for follower in users if follower != user]
                followers = sample(followers, k=randint(0, len(users) - 1))
                profile.followers.add(*followers)
                profile.save()
            self.stdout.write(self.style.SUCCESS("Профілі користувачів успішно створені!"))
        except Exception as e:
            self.stdout.write(self.style.ERROR(f"Помилка: {e}. Профілі користувачів не створені"))
